#
#  --- Define stuff here
#
InIF="{{ ansible_default_ipv4.interface }}"
set block-policy drop
set limit { states 450000 }
set limit { frags 10000 }
set timeout interval 3
set timeout { tcp.closed 7 }
table <ssh_hosts_in> { ip1, ip2, ip3 }
table <munin>  { ip }
table <nagios> { ip, ip }
icmp_type="echoreq"

#
# --- the rules
#
# normalise all packets coming in so that there are no ambiquities in
# interpreting the ultimate destination of the packet
scrub in all

#  kinda like keep-state, and we need this so that all connection initiated by
# this server can be completed successfully
pass out on $InIF proto { tcp, udp, icmp } from any to any modulate state

# by default block every thing in
block in all

#
# ---  since pf is a last matching rule app,
# --- our exception will be here
#
# allow localhost to do anything
pass in on lo0 all
pass out on lo0 all

# allow icmp echo request
pass in inet proto icmp from <nagios> to any icmp-type $icmp_type keep state
pass in inet proto icmp from <ssh_hosts_in> to any icmp-type $icmp_type keep state
pass in inet proto icmp from <munin> to any icmp-type $icmp_type keep state

# Allow ssh in
pass in on $InIF proto tcp from <ssh_hosts_in> to any port ssh keep state

# Allow munin in
pass in on $InIF proto tcp from <munin> to any port 4949 keep state

# NRPE Monitopring - Nagios
pass in on $InIF proto tcp from <nagios> to any port 5666 keep state

# please read https://forums.freebsd.org/threads/packet-filter-max-src-conn-and-synproxy-state.12983/
# to understand why im doing this 
# Allow HTTP in
#pass in on $InIF proto tcp from any to any port 80 flags S/SA synproxy state \
#   (source-track rule, max-src-conn 75, max-src-states 150 if-bound)

# Allow HTTPS in
#pass in on $InIF proto tcp from any to any port 443 flags S/SA synproxy state \
#   (source-track rule, max-src-conn 75, max-src-states 150 if-bound)
